generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int       @id @default(autoincrement())
  name          String?   @db.VarChar(255)
  email         String?   @db.VarChar(255)
  emailVerified DateTime? @map("emailVerified") @db.Timestamptz
  image         String?   @db.Text
  accounts      accounts[]
  sessions      sessions[]
  userVotes     userVotes[]
}

model accounts {
  id                Int     @id @default(autoincrement())
  userId            Int     @map("userId")
  type              String  @db.VarChar(255)
  provider          String  @db.VarChar(255)
  providerAccountId String  @map("providerAccountId") @db.VarChar(255)
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        BigInt?
  token_type        String? @db.Text
  scope             String? @db.Text
  id_token          String? @db.Text
  session_state     String? @db.Text
  user              users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model sessions {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique @map("sessionToken") @db.VarChar(255)
  userId       Int      @map("userId")
  expires      DateTime @db.Timestamptz
  user         users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verification_token {
  identifier String
  token      String   @db.Text
  expires    DateTime @db.Timestamptz

  @@id([identifier, token])
}

model Vote {
  id           Int            @id @default(autoincrement())
  title        String
  type         String
  image        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  startDate    DateTime       @default(now())
  endDate      DateTime
  userVotes    userVotes[]
  voteItemVote VoteItemVote[]
}

model VoteItem {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  image        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  voteItemVote VoteItemVote[]
}

model VoteItemVote {
  id         Int        @id @default(autoincrement())
  voteItemId Int
  voteId     Int
  voteCount  Int        @default(0)
  userVotes  userVotes[]
  vote       Vote       @relation(fields: [voteId], references: [id])
  voteItem   VoteItem   @relation(fields: [voteItemId], references: [id])

  @@unique([voteItemId, voteId])
}

model userVotes {
  id             Int          @id @default(autoincrement())
  userId         Int
  voteId         Int
  voteItemVoteId Int
  createdAt      DateTime     @default(now())
  user           users        @relation(fields: [userId], references: [id])
  vote           Vote         @relation(fields: [voteId], references: [id])
  voteItemVote   VoteItemVote @relation(fields: [voteItemVoteId], references: [id])

  @@unique([userId, voteId])
}
